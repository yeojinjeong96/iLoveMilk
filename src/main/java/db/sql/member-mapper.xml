<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key= "loginMember">
		SELECT
			   MEMBER_NO
			 , MEMBER_ID
			 , MEMBER_PWD
			 , MEMBER_NAME
			 , PHONE
			 , EMAIL
			 , ADDRESS_NUMBER
			 , ADDRESS
			 , ADDRESS_DETAIL
			 , PROFILE
			 , ENROLL_DATE
			 , MODIFY_DATE
			 , BLACK_LIST
			 , STATUS
			 , MEMBER_GRADE
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = ?
		   AND MEMBER_PWD = ?
		   AND STATUS = 'Y'
	</entry>
	
	<entry key="findMemberId">
		SELECT
			   MEMBER_NO
			 , MEMBER_ID
			 , MEMBER_PWD
			 , MEMBER_NAME
			 , PHONE
			 , EMAIL
			 , ADDRESS_NUMBER
			 , ADDRESS
			 , ADDRESS_DETAIL
			 , PROFILE
			 , ENROLL_DATE
			 , MODIFY_DATE
			 , BLACK_LIST
			 , STATUS
			 , MEMBER_GRADE
		  FROM TB_MEMBER
		 WHERE MEMBER_NAME= ?
		   AND EMAIL= ?
	</entry>
	
	<entry key="idCheck">
		SELECT
			   COUNT(*) "COUNT"
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = ? 
	</entry>
	
	<entry key="insertMember">
		INSERT
		  INTO TB_MEMBER
		  (
		    MEMBER_NO
		  , MEMBER_ID
		  , MEMBER_PWD
		  , MEMBER_NAME
		  , PHONE
		  , EMAIL
		  , ADDRESS_NUMBER
		  , ADDRESS
		  , ADDRESS_DETAIL
		  , PROFILE
		  , ENROLL_DATE
		  , MODIFY_DATE
		  , BLACK_LIST
		  , STATUS
		  , MEMBER_GRADE
		  )
		  VALUES
		  (
		    SEQ_MNO.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , DEFAULT
		  , DEFAULT
		  , DEFAULT
		  , DEFAULT
		  , DEFAULT
		  , DEFAULT
		  )
		   
	</entry>
	
	<entry key="updateCheckPwd">
		SELECT
			   MEMBER_NO
			 , MEMBER_ID
			 , MEMBER_PWD
			 , MEMBER_NAME
			 , PHONE
			 , EMAIL
			 , ADDRESS_NUMBER
			 , ADDRESS
			 , ADDRESS_DETAIL
			 , PROFILE
			 , ENROLL_DATE
			 , MODIFY_DATE
			 , BLACK_LIST
			 , STATUS
			 , MEMBER_GRADE
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = ?
		   AND MEMBER_PWD = ?
	</entry>
	
	<entry key="updateMember">
		UPDATE TB_MEMBER
		   SET MEMBER_NAME = ?
		   	 , PHONE =?
		   	 , EMAIL = ?
		   	 , ADDRESS_NUMBER =?
		   	 , ADDRESS = ?
		   	 , ADDRESS_DETAIL =?
		   	 , MODIFY_DATE = SYSDATE
		 WHERE MEMBER_ID =? 
	
	</entry>
	
	<entry key="selectMember">
	SELECT
			   MEMBER_NO
			 , MEMBER_ID
			 , MEMBER_PWD
			 , MEMBER_NAME
			 , PHONE
			 , EMAIL
			 , ADDRESS_NUMBER
			 , ADDRESS
			 , ADDRESS_DETAIL
			 , PROFILE
			 , ENROLL_DATE
			 , MODIFY_DATE
			 , BLACK_LIST
			 , STATUS
			 , MEMBER_GRADE
		  FROM TB_MEMBER
		 WHERE MEMBER_ID = ?
		   AND STATUS = 'Y'
	</entry>
	
	<entry key="updatePwdMember">
		UPDATE TB_MEMBER
		   SET MEMBER_PWD = ?
		     , MODIFY_DATE = SYSDATE
		 WHERE MEMBER_ID = ?
		   AND MEMBER_PWD = ?
	</entry>
	

	
	<entry key="MemberDelete">
		UPDATE TB_MEMBER
		   SET STATUS = 'N'
		     , MODIFY_DATE = SYSDATE
		 WHERE MEMBER_ID = ?
		   AND MEMBER_PWD = ?
	
	</entry>
	
	<entry key="selectListCount">
	 SELECT
            COUNT(*) COUNT
       FROM TB_MEMBER
      WHERE STATUS = 'Y' 
	</entry>
	
	<entry key="selectMemberList">
 		SELECT *    
		  FROM(
		      SELECT ROWNUM RNUM, A.*  
		        FROM( 
                        SELECT
                                M.MEMBER_NO,
                                MEMBER_ID,
                                MEMBER_PWD,
                                MEMBER_NAME,
                                NVL(PHONE, '없음')PHONE,
                                EMAIL,
                                ADDRESS_NUMBER,
                                NVL(ADDRESS, '없음')ADDRESS,
                                ADDRESS_DETAIL,
                                PROFILE,
                                ENROLL_DATE,
                                M.MODIFY_DATE,
                                BLACK_LIST,
                                M.STATUS,
                                MEMBER_GRADE,
                                TOTAL,
                                (
                               SELECT NVL(SUM(PRICE), 0)
                                  FROM TB_ORDER
                                  JOIN TB_PAYMENT USING(ORDER_NO)
                                 WHERE MEMBER_NO = M.MEMBER_NO
                                )TOTALPAY
                           FROM TB_MEMBER M
                          LEFT JOIN TB_POINT P ON (M.MEMBER_NO = P.MEMBER_NO)
                          WHERE M.STATUS = 'Y'
                          ORDER BY ENROLL_DATE DESC
		           )A
		     )  
		  WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectPointListCount">
		SELECT COUNT(*)COUNT
		 FROM TB_POINT P 
		WHERE MEMBER_NO =?
	</entry>
	
	<entry key="selectPointList">
        SELECT *
            FROM(                     
 		        SELECT ROWNUM RNUM, A.*
		          FROM (                            
                        SELECT 
                                POINT_NO,
                                COUNT,
                                STATUS,
                                TOTAL,
                                MODIFY_DATE,
                                CONTENT,
                                ORDER_NO,
                                MEMBER_NO
                          FROM TB_POINT
                         WHERE MEMBER_NO =?	
                         ORDER
                           BY MODIFY_DATE DESC
                        )A
                    )
         WHERE RNUM BETWEEN ? AND ? 	
	</entry>
	
	<entry key="selectReportListCount">
		SELECT 
			   COUNT(*) COUNT
		  FROM TB_REPORT		
	</entry>
	<entry key="selectMemberReportList">
	        SELECT *
            FROM(                     
 		        SELECT ROWNUM RNUM, A.*
		          FROM (                            
                        SELECT 
								REPORT_NO,
								REPORTING_MEM_NO,
								REF_NO,
								REPORT_CONTENT,
								REPORT_DATE,
								REPORT_TYPE,
								MEMBER_ID
                          FROM TB_REPORT
                         JOIN TB_MEMBER ON (MEMBER_NO = REPORTING_MEM_NO) 
                         ORDER
                           BY REPORT_DATE DESC
                        )A
                    )
         WHERE RNUM BETWEEN ? AND ? 
	</entry>
	
	<entry key="selectMemberSearchCount">
		SELECT 
			   COUNT(*)COUNT
		  FROM TB_MEMBER
		 WHERE MEMBER_ID LIKE '%' || ? || '%'
		   AND STATUS = 'Y'   
	</entry>
	
	<entry key ="selectSearchMemberList">
	 		SELECT *    
		  FROM(
		      SELECT ROWNUM RNUM, A.*  
		        FROM( 
                        SELECT
                                M.MEMBER_NO,
                                MEMBER_ID,
                                MEMBER_PWD,
                                MEMBER_NAME,
                                NVL(PHONE, '없음')PHONE,
                                EMAIL,
                                ADDRESS_NUMBER,
                                NVL(ADDRESS, '없음')ADDRESS,
                                ADDRESS_DETAIL,
                                PROFILE,
                                ENROLL_DATE,
                                M.MODIFY_DATE,
                                BLACK_LIST,
                                M.STATUS,
                                MEMBER_GRADE,
                                TOTAL,
                                (
                               SELECT NVL(SUM(PRICE), 0)
                                  FROM TB_ORDER
                                  JOIN TB_PAYMENT USING(ORDER_NO)
                                 WHERE MEMBER_NO = M.MEMBER_NO
                                )TOTALPAY
                           FROM TB_MEMBER M
                          LEFT JOIN TB_POINT P ON (M.MEMBER_NO = P.MEMBER_NO)
                          WHERE M.STATUS = 'Y'
                          AND MEMBER_ID LIKE '%' || ? || '%'
                          ORDER BY ENROLL_DATE DESC
		           )A
		     )  
		  WHERE RNUM BETWEEN ? AND ? 
	</entry>
	
	  <entry key="UpdateProfile">
   UPDATE TB_MEMBER
         SET MEMBER_ID = ?
             , MEMBER_PWD = ?
             , MEMBER_NAME = ?
             , PHONE =?
             , EMAIL = ?
             , ADDRESS_NUMBER =?
             , ADDRESS = ?
             , ADDRESS_DETAIL =?
             , PROFILE = ?
           , MODIFY_DATE = SYSDATE
       WHERE MEMBER_NO = ?
        
   </entry>
   
      <entry key="productLikeList">
     SELECT 
              LI.PRODUCT_NO
           , LI.MEMBER_NO
           , P_LIKE_DATE
           , PRODUCT_IMG
           , PRICE
            , PRODUCT_NAME
        FROM TB_PRODUCT_LIKE LI 
        JOIN TB_PRODUCT PR ON LI.PRODUCT_NO = PR.PRODUCT_NO
        WHERE MEMBER_NO = ?
   
   </entry>
</properties>